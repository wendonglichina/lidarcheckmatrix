// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: warning.proto

#ifndef PROTOBUF_warning_2eproto__INCLUDED
#define PROTOBUF_warning_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace WarningProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_warning_2eproto();
void protobuf_AssignDesc_warning_2eproto();
void protobuf_ShutdownFile_warning_2eproto();

class FCW;
class LDW;
class WarningResult;
class WarningResult_FCW;
class WarningResult_HMW;
class WarningResult_UFCW;
class WarningResult_PCW;
class WarningResult_LDW;

enum FCW_FCWType {
  FCW_FCWType_FCW_NONE = 0,
  FCW_FCWType_FCW_TTC = 1,
  FCW_FCWType_FCW_HMW_LEVEL1 = 2,
  FCW_FCWType_FCW_HMW_LEVEL2 = 4
};
bool FCW_FCWType_IsValid(int value);
const FCW_FCWType FCW_FCWType_FCWType_MIN = FCW_FCWType_FCW_NONE;
const FCW_FCWType FCW_FCWType_FCWType_MAX = FCW_FCWType_FCW_HMW_LEVEL2;
const int FCW_FCWType_FCWType_ARRAYSIZE = FCW_FCWType_FCWType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FCW_FCWType_descriptor();
inline const ::std::string& FCW_FCWType_Name(FCW_FCWType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FCW_FCWType_descriptor(), value);
}
inline bool FCW_FCWType_Parse(
    const ::std::string& name, FCW_FCWType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FCW_FCWType>(
    FCW_FCWType_descriptor(), name, value);
}
enum LDW_LDWType {
  LDW_LDWType_LDW_NONE = 0,
  LDW_LDWType_LDW_LEFT = 1,
  LDW_LDWType_LDW_RIGHT = 2
};
bool LDW_LDWType_IsValid(int value);
const LDW_LDWType LDW_LDWType_LDWType_MIN = LDW_LDWType_LDW_NONE;
const LDW_LDWType LDW_LDWType_LDWType_MAX = LDW_LDWType_LDW_RIGHT;
const int LDW_LDWType_LDWType_ARRAYSIZE = LDW_LDWType_LDWType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LDW_LDWType_descriptor();
inline const ::std::string& LDW_LDWType_Name(LDW_LDWType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LDW_LDWType_descriptor(), value);
}
inline bool LDW_LDWType_Parse(
    const ::std::string& name, LDW_LDWType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LDW_LDWType>(
    LDW_LDWType_descriptor(), name, value);
}
enum WarningResult_WarningLevel {
  WarningResult_WarningLevel_WarningLevel_None = 0,
  WarningResult_WarningLevel_WarningLevel_Warning = 1,
  WarningResult_WarningLevel_WarningLevel_Impact = 2,
  WarningResult_WarningLevel_WarningLevel_Notice = 1024
};
bool WarningResult_WarningLevel_IsValid(int value);
const WarningResult_WarningLevel WarningResult_WarningLevel_WarningLevel_MIN = WarningResult_WarningLevel_WarningLevel_None;
const WarningResult_WarningLevel WarningResult_WarningLevel_WarningLevel_MAX = WarningResult_WarningLevel_WarningLevel_Notice;
const int WarningResult_WarningLevel_WarningLevel_ARRAYSIZE = WarningResult_WarningLevel_WarningLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* WarningResult_WarningLevel_descriptor();
inline const ::std::string& WarningResult_WarningLevel_Name(WarningResult_WarningLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    WarningResult_WarningLevel_descriptor(), value);
}
inline bool WarningResult_WarningLevel_Parse(
    const ::std::string& name, WarningResult_WarningLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WarningResult_WarningLevel>(
    WarningResult_WarningLevel_descriptor(), name, value);
}
enum WarningResult_LDWType {
  WarningResult_LDWType_LDWType_None = 0,
  WarningResult_LDWType_LDWType_Left = 1,
  WarningResult_LDWType_LDWType_Right = 2
};
bool WarningResult_LDWType_IsValid(int value);
const WarningResult_LDWType WarningResult_LDWType_LDWType_MIN = WarningResult_LDWType_LDWType_None;
const WarningResult_LDWType WarningResult_LDWType_LDWType_MAX = WarningResult_LDWType_LDWType_Right;
const int WarningResult_LDWType_LDWType_ARRAYSIZE = WarningResult_LDWType_LDWType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WarningResult_LDWType_descriptor();
inline const ::std::string& WarningResult_LDWType_Name(WarningResult_LDWType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WarningResult_LDWType_descriptor(), value);
}
inline bool WarningResult_LDWType_Parse(
    const ::std::string& name, WarningResult_LDWType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WarningResult_LDWType>(
    WarningResult_LDWType_descriptor(), name, value);
}
enum WarningResult_WarningType {
  WarningResult_WarningType_WarningType_None = 0,
  WarningResult_WarningType_WarningType_FCW = 1,
  WarningResult_WarningType_WarningType_HMW = 2,
  WarningResult_WarningType_WarningType_UFCW = 4,
  WarningResult_WarningType_WarningType_LDW = 8,
  WarningResult_WarningType_WarningType_PCW = 16
};
bool WarningResult_WarningType_IsValid(int value);
const WarningResult_WarningType WarningResult_WarningType_WarningType_MIN = WarningResult_WarningType_WarningType_None;
const WarningResult_WarningType WarningResult_WarningType_WarningType_MAX = WarningResult_WarningType_WarningType_PCW;
const int WarningResult_WarningType_WarningType_ARRAYSIZE = WarningResult_WarningType_WarningType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WarningResult_WarningType_descriptor();
inline const ::std::string& WarningResult_WarningType_Name(WarningResult_WarningType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WarningResult_WarningType_descriptor(), value);
}
inline bool WarningResult_WarningType_Parse(
    const ::std::string& name, WarningResult_WarningType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WarningResult_WarningType>(
    WarningResult_WarningType_descriptor(), name, value);
}
// ===================================================================

class FCW : public ::google::protobuf::Message {
 public:
  FCW();
  virtual ~FCW();

  FCW(const FCW& from);

  inline FCW& operator=(const FCW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCW& default_instance();

  void Swap(FCW* other);

  // implements Message ----------------------------------------------

  FCW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCW& from);
  void MergeFrom(const FCW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FCW_FCWType FCWType;
  static const FCWType FCW_NONE = FCW_FCWType_FCW_NONE;
  static const FCWType FCW_TTC = FCW_FCWType_FCW_TTC;
  static const FCWType FCW_HMW_LEVEL1 = FCW_FCWType_FCW_HMW_LEVEL1;
  static const FCWType FCW_HMW_LEVEL2 = FCW_FCWType_FCW_HMW_LEVEL2;
  static inline bool FCWType_IsValid(int value) {
    return FCW_FCWType_IsValid(value);
  }
  static const FCWType FCWType_MIN =
    FCW_FCWType_FCWType_MIN;
  static const FCWType FCWType_MAX =
    FCW_FCWType_FCWType_MAX;
  static const int FCWType_ARRAYSIZE =
    FCW_FCWType_FCWType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FCWType_descriptor() {
    return FCW_FCWType_descriptor();
  }
  static inline const ::std::string& FCWType_Name(FCWType value) {
    return FCW_FCWType_Name(value);
  }
  static inline bool FCWType_Parse(const ::std::string& name,
      FCWType* value) {
    return FCW_FCWType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional float ttc = 1;
  inline bool has_ttc() const;
  inline void clear_ttc();
  static const int kTtcFieldNumber = 1;
  inline float ttc() const;
  inline void set_ttc(float value);

  // optional float hmw = 2;
  inline bool has_hmw() const;
  inline void clear_hmw();
  static const int kHmwFieldNumber = 2;
  inline float hmw() const;
  inline void set_hmw(float value);

  // optional bool warning = 3;
  inline bool has_warning() const;
  inline void clear_warning();
  static const int kWarningFieldNumber = 3;
  inline bool warning() const;
  inline void set_warning(bool value);

  // optional .WarningProto.FCW.FCWType warning_type = 4;
  inline bool has_warning_type() const;
  inline void clear_warning_type();
  static const int kWarningTypeFieldNumber = 4;
  inline ::WarningProto::FCW_FCWType warning_type() const;
  inline void set_warning_type(::WarningProto::FCW_FCWType value);

  // @@protoc_insertion_point(class_scope:WarningProto.FCW)
 private:
  inline void set_has_ttc();
  inline void clear_has_ttc();
  inline void set_has_hmw();
  inline void clear_has_hmw();
  inline void set_has_warning();
  inline void clear_has_warning();
  inline void set_has_warning_type();
  inline void clear_has_warning_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float ttc_;
  float hmw_;
  bool warning_;
  int warning_type_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static FCW* default_instance_;
};
// -------------------------------------------------------------------

class LDW : public ::google::protobuf::Message {
 public:
  LDW();
  virtual ~LDW();

  LDW(const LDW& from);

  inline LDW& operator=(const LDW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LDW& default_instance();

  void Swap(LDW* other);

  // implements Message ----------------------------------------------

  LDW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LDW& from);
  void MergeFrom(const LDW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LDW_LDWType LDWType;
  static const LDWType LDW_NONE = LDW_LDWType_LDW_NONE;
  static const LDWType LDW_LEFT = LDW_LDWType_LDW_LEFT;
  static const LDWType LDW_RIGHT = LDW_LDWType_LDW_RIGHT;
  static inline bool LDWType_IsValid(int value) {
    return LDW_LDWType_IsValid(value);
  }
  static const LDWType LDWType_MIN =
    LDW_LDWType_LDWType_MIN;
  static const LDWType LDWType_MAX =
    LDW_LDWType_LDWType_MAX;
  static const int LDWType_ARRAYSIZE =
    LDW_LDWType_LDWType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LDWType_descriptor() {
    return LDW_LDWType_descriptor();
  }
  static inline const ::std::string& LDWType_Name(LDWType value) {
    return LDW_LDWType_Name(value);
  }
  static inline bool LDWType_Parse(const ::std::string& name,
      LDWType* value) {
    return LDW_LDWType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .WarningProto.LDW.LDWType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::WarningProto::LDW_LDWType type() const;
  inline void set_type(::WarningProto::LDW_LDWType value);

  // optional bool warning = 2;
  inline bool has_warning() const;
  inline void clear_warning();
  static const int kWarningFieldNumber = 2;
  inline bool warning() const;
  inline void set_warning(bool value);

  // @@protoc_insertion_point(class_scope:WarningProto.LDW)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_warning();
  inline void clear_has_warning();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  bool warning_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static LDW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult_FCW : public ::google::protobuf::Message {
 public:
  WarningResult_FCW();
  virtual ~WarningResult_FCW();

  WarningResult_FCW(const WarningResult_FCW& from);

  inline WarningResult_FCW& operator=(const WarningResult_FCW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult_FCW& default_instance();

  void Swap(WarningResult_FCW* other);

  // implements Message ----------------------------------------------

  WarningResult_FCW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult_FCW& from);
  void MergeFrom(const WarningResult_FCW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 veh_id = 1;
  inline bool has_veh_id() const;
  inline void clear_veh_id();
  static const int kVehIdFieldNumber = 1;
  inline ::google::protobuf::int32 veh_id() const;
  inline void set_veh_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional float ttc = 3;
  inline bool has_ttc() const;
  inline void clear_ttc();
  static const int kTtcFieldNumber = 3;
  inline float ttc() const;
  inline void set_ttc(float value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult.FCW)
 private:
  inline void set_has_veh_id();
  inline void clear_has_veh_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ttc();
  inline void clear_has_ttc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 veh_id_;
  ::google::protobuf::int32 level_;
  float ttc_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult_FCW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult_HMW : public ::google::protobuf::Message {
 public:
  WarningResult_HMW();
  virtual ~WarningResult_HMW();

  WarningResult_HMW(const WarningResult_HMW& from);

  inline WarningResult_HMW& operator=(const WarningResult_HMW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult_HMW& default_instance();

  void Swap(WarningResult_HMW* other);

  // implements Message ----------------------------------------------

  WarningResult_HMW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult_HMW& from);
  void MergeFrom(const WarningResult_HMW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 veh_id = 1;
  inline bool has_veh_id() const;
  inline void clear_veh_id();
  static const int kVehIdFieldNumber = 1;
  inline ::google::protobuf::int32 veh_id() const;
  inline void set_veh_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional float hmw = 3;
  inline bool has_hmw() const;
  inline void clear_hmw();
  static const int kHmwFieldNumber = 3;
  inline float hmw() const;
  inline void set_hmw(float value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult.HMW)
 private:
  inline void set_has_veh_id();
  inline void clear_has_veh_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hmw();
  inline void clear_has_hmw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 veh_id_;
  ::google::protobuf::int32 level_;
  float hmw_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult_HMW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult_UFCW : public ::google::protobuf::Message {
 public:
  WarningResult_UFCW();
  virtual ~WarningResult_UFCW();

  WarningResult_UFCW(const WarningResult_UFCW& from);

  inline WarningResult_UFCW& operator=(const WarningResult_UFCW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult_UFCW& default_instance();

  void Swap(WarningResult_UFCW* other);

  // implements Message ----------------------------------------------

  WarningResult_UFCW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult_UFCW& from);
  void MergeFrom(const WarningResult_UFCW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 veh_id = 1;
  inline bool has_veh_id() const;
  inline void clear_veh_id();
  static const int kVehIdFieldNumber = 1;
  inline ::google::protobuf::int32 veh_id() const;
  inline void set_veh_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional float dist = 3;
  inline bool has_dist() const;
  inline void clear_dist();
  static const int kDistFieldNumber = 3;
  inline float dist() const;
  inline void set_dist(float value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult.UFCW)
 private:
  inline void set_has_veh_id();
  inline void clear_has_veh_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_dist();
  inline void clear_has_dist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 veh_id_;
  ::google::protobuf::int32 level_;
  float dist_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult_UFCW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult_PCW : public ::google::protobuf::Message {
 public:
  WarningResult_PCW();
  virtual ~WarningResult_PCW();

  WarningResult_PCW(const WarningResult_PCW& from);

  inline WarningResult_PCW& operator=(const WarningResult_PCW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult_PCW& default_instance();

  void Swap(WarningResult_PCW* other);

  // implements Message ----------------------------------------------

  WarningResult_PCW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult_PCW& from);
  void MergeFrom(const WarningResult_PCW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ped_id = 1;
  inline bool has_ped_id() const;
  inline void clear_ped_id();
  static const int kPedIdFieldNumber = 1;
  inline ::google::protobuf::int32 ped_id() const;
  inline void set_ped_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional float dist = 3;
  inline bool has_dist() const;
  inline void clear_dist();
  static const int kDistFieldNumber = 3;
  inline float dist() const;
  inline void set_dist(float value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult.PCW)
 private:
  inline void set_has_ped_id();
  inline void clear_has_ped_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_dist();
  inline void clear_has_dist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ped_id_;
  ::google::protobuf::int32 level_;
  float dist_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult_PCW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult_LDW : public ::google::protobuf::Message {
 public:
  WarningResult_LDW();
  virtual ~WarningResult_LDW();

  WarningResult_LDW(const WarningResult_LDW& from);

  inline WarningResult_LDW& operator=(const WarningResult_LDW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult_LDW& default_instance();

  void Swap(WarningResult_LDW* other);

  // implements Message ----------------------------------------------

  WarningResult_LDW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult_LDW& from);
  void MergeFrom(const WarningResult_LDW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 line_id = 1;
  inline bool has_line_id() const;
  inline void clear_line_id();
  static const int kLineIdFieldNumber = 1;
  inline ::google::protobuf::int32 line_id() const;
  inline void set_line_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 ldw_type = 3;
  inline bool has_ldw_type() const;
  inline void clear_ldw_type();
  static const int kLdwTypeFieldNumber = 3;
  inline ::google::protobuf::int32 ldw_type() const;
  inline void set_ldw_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult.LDW)
 private:
  inline void set_has_line_id();
  inline void clear_has_line_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ldw_type();
  inline void clear_has_ldw_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 line_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 ldw_type_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult_LDW* default_instance_;
};
// -------------------------------------------------------------------

class WarningResult : public ::google::protobuf::Message {
 public:
  WarningResult();
  virtual ~WarningResult();

  WarningResult(const WarningResult& from);

  inline WarningResult& operator=(const WarningResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningResult& default_instance();

  void Swap(WarningResult* other);

  // implements Message ----------------------------------------------

  WarningResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningResult& from);
  void MergeFrom(const WarningResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WarningResult_FCW FCW;
  typedef WarningResult_HMW HMW;
  typedef WarningResult_UFCW UFCW;
  typedef WarningResult_PCW PCW;
  typedef WarningResult_LDW LDW;

  typedef WarningResult_WarningLevel WarningLevel;
  static const WarningLevel WarningLevel_None = WarningResult_WarningLevel_WarningLevel_None;
  static const WarningLevel WarningLevel_Warning = WarningResult_WarningLevel_WarningLevel_Warning;
  static const WarningLevel WarningLevel_Impact = WarningResult_WarningLevel_WarningLevel_Impact;
  static const WarningLevel WarningLevel_Notice = WarningResult_WarningLevel_WarningLevel_Notice;
  static inline bool WarningLevel_IsValid(int value) {
    return WarningResult_WarningLevel_IsValid(value);
  }
  static const WarningLevel WarningLevel_MIN =
    WarningResult_WarningLevel_WarningLevel_MIN;
  static const WarningLevel WarningLevel_MAX =
    WarningResult_WarningLevel_WarningLevel_MAX;
  static const int WarningLevel_ARRAYSIZE =
    WarningResult_WarningLevel_WarningLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WarningLevel_descriptor() {
    return WarningResult_WarningLevel_descriptor();
  }
  static inline const ::std::string& WarningLevel_Name(WarningLevel value) {
    return WarningResult_WarningLevel_Name(value);
  }
  static inline bool WarningLevel_Parse(const ::std::string& name,
      WarningLevel* value) {
    return WarningResult_WarningLevel_Parse(name, value);
  }

  typedef WarningResult_LDWType LDWType;
  static const LDWType LDWType_None = WarningResult_LDWType_LDWType_None;
  static const LDWType LDWType_Left = WarningResult_LDWType_LDWType_Left;
  static const LDWType LDWType_Right = WarningResult_LDWType_LDWType_Right;
  static inline bool LDWType_IsValid(int value) {
    return WarningResult_LDWType_IsValid(value);
  }
  static const LDWType LDWType_MIN =
    WarningResult_LDWType_LDWType_MIN;
  static const LDWType LDWType_MAX =
    WarningResult_LDWType_LDWType_MAX;
  static const int LDWType_ARRAYSIZE =
    WarningResult_LDWType_LDWType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LDWType_descriptor() {
    return WarningResult_LDWType_descriptor();
  }
  static inline const ::std::string& LDWType_Name(LDWType value) {
    return WarningResult_LDWType_Name(value);
  }
  static inline bool LDWType_Parse(const ::std::string& name,
      LDWType* value) {
    return WarningResult_LDWType_Parse(name, value);
  }

  typedef WarningResult_WarningType WarningType;
  static const WarningType WarningType_None = WarningResult_WarningType_WarningType_None;
  static const WarningType WarningType_FCW = WarningResult_WarningType_WarningType_FCW;
  static const WarningType WarningType_HMW = WarningResult_WarningType_WarningType_HMW;
  static const WarningType WarningType_UFCW = WarningResult_WarningType_WarningType_UFCW;
  static const WarningType WarningType_LDW = WarningResult_WarningType_WarningType_LDW;
  static const WarningType WarningType_PCW = WarningResult_WarningType_WarningType_PCW;
  static inline bool WarningType_IsValid(int value) {
    return WarningResult_WarningType_IsValid(value);
  }
  static const WarningType WarningType_MIN =
    WarningResult_WarningType_WarningType_MIN;
  static const WarningType WarningType_MAX =
    WarningResult_WarningType_WarningType_MAX;
  static const int WarningType_ARRAYSIZE =
    WarningResult_WarningType_WarningType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WarningType_descriptor() {
    return WarningResult_WarningType_descriptor();
  }
  static inline const ::std::string& WarningType_Name(WarningType value) {
    return WarningResult_WarningType_Name(value);
  }
  static inline bool WarningType_Parse(const ::std::string& name,
      WarningType* value) {
    return WarningResult_WarningType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .WarningProto.WarningResult.FCW fcw = 1;
  inline bool has_fcw() const;
  inline void clear_fcw();
  static const int kFcwFieldNumber = 1;
  inline const ::WarningProto::WarningResult_FCW& fcw() const;
  inline ::WarningProto::WarningResult_FCW* mutable_fcw();
  inline ::WarningProto::WarningResult_FCW* release_fcw();
  inline void set_allocated_fcw(::WarningProto::WarningResult_FCW* fcw);

  // optional .WarningProto.WarningResult.HMW hmw = 2;
  inline bool has_hmw() const;
  inline void clear_hmw();
  static const int kHmwFieldNumber = 2;
  inline const ::WarningProto::WarningResult_HMW& hmw() const;
  inline ::WarningProto::WarningResult_HMW* mutable_hmw();
  inline ::WarningProto::WarningResult_HMW* release_hmw();
  inline void set_allocated_hmw(::WarningProto::WarningResult_HMW* hmw);

  // optional .WarningProto.WarningResult.UFCW ufcw = 3;
  inline bool has_ufcw() const;
  inline void clear_ufcw();
  static const int kUfcwFieldNumber = 3;
  inline const ::WarningProto::WarningResult_UFCW& ufcw() const;
  inline ::WarningProto::WarningResult_UFCW* mutable_ufcw();
  inline ::WarningProto::WarningResult_UFCW* release_ufcw();
  inline void set_allocated_ufcw(::WarningProto::WarningResult_UFCW* ufcw);

  // optional .WarningProto.WarningResult.PCW pcw = 4;
  inline bool has_pcw() const;
  inline void clear_pcw();
  static const int kPcwFieldNumber = 4;
  inline const ::WarningProto::WarningResult_PCW& pcw() const;
  inline ::WarningProto::WarningResult_PCW* mutable_pcw();
  inline ::WarningProto::WarningResult_PCW* release_pcw();
  inline void set_allocated_pcw(::WarningProto::WarningResult_PCW* pcw);

  // optional .WarningProto.WarningResult.LDW ldw = 5;
  inline bool has_ldw() const;
  inline void clear_ldw();
  static const int kLdwFieldNumber = 5;
  inline const ::WarningProto::WarningResult_LDW& ldw() const;
  inline ::WarningProto::WarningResult_LDW* mutable_ldw();
  inline ::WarningProto::WarningResult_LDW* release_ldw();
  inline void set_allocated_ldw(::WarningProto::WarningResult_LDW* ldw);

  // optional int32 warn_type = 6;
  inline bool has_warn_type() const;
  inline void clear_warn_type();
  static const int kWarnTypeFieldNumber = 6;
  inline ::google::protobuf::int32 warn_type() const;
  inline void set_warn_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WarningProto.WarningResult)
 private:
  inline void set_has_fcw();
  inline void clear_has_fcw();
  inline void set_has_hmw();
  inline void clear_has_hmw();
  inline void set_has_ufcw();
  inline void clear_has_ufcw();
  inline void set_has_pcw();
  inline void clear_has_pcw();
  inline void set_has_ldw();
  inline void clear_has_ldw();
  inline void set_has_warn_type();
  inline void clear_has_warn_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::WarningProto::WarningResult_FCW* fcw_;
  ::WarningProto::WarningResult_HMW* hmw_;
  ::WarningProto::WarningResult_UFCW* ufcw_;
  ::WarningProto::WarningResult_PCW* pcw_;
  ::WarningProto::WarningResult_LDW* ldw_;
  ::google::protobuf::int32 warn_type_;
  friend void  protobuf_AddDesc_warning_2eproto();
  friend void protobuf_AssignDesc_warning_2eproto();
  friend void protobuf_ShutdownFile_warning_2eproto();

  void InitAsDefaultInstance();
  static WarningResult* default_instance_;
};
// ===================================================================


// ===================================================================

// FCW

// optional float ttc = 1;
inline bool FCW::has_ttc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCW::set_has_ttc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCW::clear_has_ttc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCW::clear_ttc() {
  ttc_ = 0;
  clear_has_ttc();
}
inline float FCW::ttc() const {
  // @@protoc_insertion_point(field_get:WarningProto.FCW.ttc)
  return ttc_;
}
inline void FCW::set_ttc(float value) {
  set_has_ttc();
  ttc_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.FCW.ttc)
}

// optional float hmw = 2;
inline bool FCW::has_hmw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCW::set_has_hmw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCW::clear_has_hmw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCW::clear_hmw() {
  hmw_ = 0;
  clear_has_hmw();
}
inline float FCW::hmw() const {
  // @@protoc_insertion_point(field_get:WarningProto.FCW.hmw)
  return hmw_;
}
inline void FCW::set_hmw(float value) {
  set_has_hmw();
  hmw_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.FCW.hmw)
}

// optional bool warning = 3;
inline bool FCW::has_warning() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCW::set_has_warning() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCW::clear_has_warning() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCW::clear_warning() {
  warning_ = false;
  clear_has_warning();
}
inline bool FCW::warning() const {
  // @@protoc_insertion_point(field_get:WarningProto.FCW.warning)
  return warning_;
}
inline void FCW::set_warning(bool value) {
  set_has_warning();
  warning_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.FCW.warning)
}

// optional .WarningProto.FCW.FCWType warning_type = 4;
inline bool FCW::has_warning_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FCW::set_has_warning_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FCW::clear_has_warning_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FCW::clear_warning_type() {
  warning_type_ = 0;
  clear_has_warning_type();
}
inline ::WarningProto::FCW_FCWType FCW::warning_type() const {
  // @@protoc_insertion_point(field_get:WarningProto.FCW.warning_type)
  return static_cast< ::WarningProto::FCW_FCWType >(warning_type_);
}
inline void FCW::set_warning_type(::WarningProto::FCW_FCWType value) {
  assert(::WarningProto::FCW_FCWType_IsValid(value));
  set_has_warning_type();
  warning_type_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.FCW.warning_type)
}

// -------------------------------------------------------------------

// LDW

// optional .WarningProto.LDW.LDWType type = 1;
inline bool LDW::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LDW::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LDW::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LDW::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::WarningProto::LDW_LDWType LDW::type() const {
  // @@protoc_insertion_point(field_get:WarningProto.LDW.type)
  return static_cast< ::WarningProto::LDW_LDWType >(type_);
}
inline void LDW::set_type(::WarningProto::LDW_LDWType value) {
  assert(::WarningProto::LDW_LDWType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.LDW.type)
}

// optional bool warning = 2;
inline bool LDW::has_warning() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LDW::set_has_warning() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LDW::clear_has_warning() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LDW::clear_warning() {
  warning_ = false;
  clear_has_warning();
}
inline bool LDW::warning() const {
  // @@protoc_insertion_point(field_get:WarningProto.LDW.warning)
  return warning_;
}
inline void LDW::set_warning(bool value) {
  set_has_warning();
  warning_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.LDW.warning)
}

// -------------------------------------------------------------------

// WarningResult_FCW

// optional int32 veh_id = 1;
inline bool WarningResult_FCW::has_veh_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult_FCW::set_has_veh_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult_FCW::clear_has_veh_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult_FCW::clear_veh_id() {
  veh_id_ = 0;
  clear_has_veh_id();
}
inline ::google::protobuf::int32 WarningResult_FCW::veh_id() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.FCW.veh_id)
  return veh_id_;
}
inline void WarningResult_FCW::set_veh_id(::google::protobuf::int32 value) {
  set_has_veh_id();
  veh_id_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.FCW.veh_id)
}

// optional int32 level = 2;
inline bool WarningResult_FCW::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult_FCW::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult_FCW::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult_FCW::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WarningResult_FCW::level() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.FCW.level)
  return level_;
}
inline void WarningResult_FCW::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.FCW.level)
}

// optional float ttc = 3;
inline bool WarningResult_FCW::has_ttc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult_FCW::set_has_ttc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult_FCW::clear_has_ttc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult_FCW::clear_ttc() {
  ttc_ = 0;
  clear_has_ttc();
}
inline float WarningResult_FCW::ttc() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.FCW.ttc)
  return ttc_;
}
inline void WarningResult_FCW::set_ttc(float value) {
  set_has_ttc();
  ttc_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.FCW.ttc)
}

// -------------------------------------------------------------------

// WarningResult_HMW

// optional int32 veh_id = 1;
inline bool WarningResult_HMW::has_veh_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult_HMW::set_has_veh_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult_HMW::clear_has_veh_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult_HMW::clear_veh_id() {
  veh_id_ = 0;
  clear_has_veh_id();
}
inline ::google::protobuf::int32 WarningResult_HMW::veh_id() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.HMW.veh_id)
  return veh_id_;
}
inline void WarningResult_HMW::set_veh_id(::google::protobuf::int32 value) {
  set_has_veh_id();
  veh_id_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.HMW.veh_id)
}

// optional int32 level = 2;
inline bool WarningResult_HMW::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult_HMW::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult_HMW::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult_HMW::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WarningResult_HMW::level() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.HMW.level)
  return level_;
}
inline void WarningResult_HMW::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.HMW.level)
}

// optional float hmw = 3;
inline bool WarningResult_HMW::has_hmw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult_HMW::set_has_hmw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult_HMW::clear_has_hmw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult_HMW::clear_hmw() {
  hmw_ = 0;
  clear_has_hmw();
}
inline float WarningResult_HMW::hmw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.HMW.hmw)
  return hmw_;
}
inline void WarningResult_HMW::set_hmw(float value) {
  set_has_hmw();
  hmw_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.HMW.hmw)
}

// -------------------------------------------------------------------

// WarningResult_UFCW

// optional int32 veh_id = 1;
inline bool WarningResult_UFCW::has_veh_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult_UFCW::set_has_veh_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult_UFCW::clear_has_veh_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult_UFCW::clear_veh_id() {
  veh_id_ = 0;
  clear_has_veh_id();
}
inline ::google::protobuf::int32 WarningResult_UFCW::veh_id() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.UFCW.veh_id)
  return veh_id_;
}
inline void WarningResult_UFCW::set_veh_id(::google::protobuf::int32 value) {
  set_has_veh_id();
  veh_id_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.UFCW.veh_id)
}

// optional int32 level = 2;
inline bool WarningResult_UFCW::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult_UFCW::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult_UFCW::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult_UFCW::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WarningResult_UFCW::level() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.UFCW.level)
  return level_;
}
inline void WarningResult_UFCW::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.UFCW.level)
}

// optional float dist = 3;
inline bool WarningResult_UFCW::has_dist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult_UFCW::set_has_dist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult_UFCW::clear_has_dist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult_UFCW::clear_dist() {
  dist_ = 0;
  clear_has_dist();
}
inline float WarningResult_UFCW::dist() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.UFCW.dist)
  return dist_;
}
inline void WarningResult_UFCW::set_dist(float value) {
  set_has_dist();
  dist_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.UFCW.dist)
}

// -------------------------------------------------------------------

// WarningResult_PCW

// optional int32 ped_id = 1;
inline bool WarningResult_PCW::has_ped_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult_PCW::set_has_ped_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult_PCW::clear_has_ped_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult_PCW::clear_ped_id() {
  ped_id_ = 0;
  clear_has_ped_id();
}
inline ::google::protobuf::int32 WarningResult_PCW::ped_id() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.PCW.ped_id)
  return ped_id_;
}
inline void WarningResult_PCW::set_ped_id(::google::protobuf::int32 value) {
  set_has_ped_id();
  ped_id_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.PCW.ped_id)
}

// optional int32 level = 2;
inline bool WarningResult_PCW::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult_PCW::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult_PCW::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult_PCW::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WarningResult_PCW::level() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.PCW.level)
  return level_;
}
inline void WarningResult_PCW::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.PCW.level)
}

// optional float dist = 3;
inline bool WarningResult_PCW::has_dist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult_PCW::set_has_dist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult_PCW::clear_has_dist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult_PCW::clear_dist() {
  dist_ = 0;
  clear_has_dist();
}
inline float WarningResult_PCW::dist() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.PCW.dist)
  return dist_;
}
inline void WarningResult_PCW::set_dist(float value) {
  set_has_dist();
  dist_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.PCW.dist)
}

// -------------------------------------------------------------------

// WarningResult_LDW

// optional int32 line_id = 1;
inline bool WarningResult_LDW::has_line_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult_LDW::set_has_line_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult_LDW::clear_has_line_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult_LDW::clear_line_id() {
  line_id_ = 0;
  clear_has_line_id();
}
inline ::google::protobuf::int32 WarningResult_LDW::line_id() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.LDW.line_id)
  return line_id_;
}
inline void WarningResult_LDW::set_line_id(::google::protobuf::int32 value) {
  set_has_line_id();
  line_id_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.LDW.line_id)
}

// optional int32 level = 2;
inline bool WarningResult_LDW::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult_LDW::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult_LDW::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult_LDW::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WarningResult_LDW::level() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.LDW.level)
  return level_;
}
inline void WarningResult_LDW::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.LDW.level)
}

// optional int32 ldw_type = 3;
inline bool WarningResult_LDW::has_ldw_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult_LDW::set_has_ldw_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult_LDW::clear_has_ldw_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult_LDW::clear_ldw_type() {
  ldw_type_ = 0;
  clear_has_ldw_type();
}
inline ::google::protobuf::int32 WarningResult_LDW::ldw_type() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.LDW.ldw_type)
  return ldw_type_;
}
inline void WarningResult_LDW::set_ldw_type(::google::protobuf::int32 value) {
  set_has_ldw_type();
  ldw_type_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.LDW.ldw_type)
}

// -------------------------------------------------------------------

// WarningResult

// optional .WarningProto.WarningResult.FCW fcw = 1;
inline bool WarningResult::has_fcw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningResult::set_has_fcw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningResult::clear_has_fcw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningResult::clear_fcw() {
  if (fcw_ != NULL) fcw_->::WarningProto::WarningResult_FCW::Clear();
  clear_has_fcw();
}
inline const ::WarningProto::WarningResult_FCW& WarningResult::fcw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.fcw)
  return fcw_ != NULL ? *fcw_ : *default_instance_->fcw_;
}
inline ::WarningProto::WarningResult_FCW* WarningResult::mutable_fcw() {
  set_has_fcw();
  if (fcw_ == NULL) fcw_ = new ::WarningProto::WarningResult_FCW;
  // @@protoc_insertion_point(field_mutable:WarningProto.WarningResult.fcw)
  return fcw_;
}
inline ::WarningProto::WarningResult_FCW* WarningResult::release_fcw() {
  clear_has_fcw();
  ::WarningProto::WarningResult_FCW* temp = fcw_;
  fcw_ = NULL;
  return temp;
}
inline void WarningResult::set_allocated_fcw(::WarningProto::WarningResult_FCW* fcw) {
  delete fcw_;
  fcw_ = fcw;
  if (fcw) {
    set_has_fcw();
  } else {
    clear_has_fcw();
  }
  // @@protoc_insertion_point(field_set_allocated:WarningProto.WarningResult.fcw)
}

// optional .WarningProto.WarningResult.HMW hmw = 2;
inline bool WarningResult::has_hmw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarningResult::set_has_hmw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarningResult::clear_has_hmw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarningResult::clear_hmw() {
  if (hmw_ != NULL) hmw_->::WarningProto::WarningResult_HMW::Clear();
  clear_has_hmw();
}
inline const ::WarningProto::WarningResult_HMW& WarningResult::hmw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.hmw)
  return hmw_ != NULL ? *hmw_ : *default_instance_->hmw_;
}
inline ::WarningProto::WarningResult_HMW* WarningResult::mutable_hmw() {
  set_has_hmw();
  if (hmw_ == NULL) hmw_ = new ::WarningProto::WarningResult_HMW;
  // @@protoc_insertion_point(field_mutable:WarningProto.WarningResult.hmw)
  return hmw_;
}
inline ::WarningProto::WarningResult_HMW* WarningResult::release_hmw() {
  clear_has_hmw();
  ::WarningProto::WarningResult_HMW* temp = hmw_;
  hmw_ = NULL;
  return temp;
}
inline void WarningResult::set_allocated_hmw(::WarningProto::WarningResult_HMW* hmw) {
  delete hmw_;
  hmw_ = hmw;
  if (hmw) {
    set_has_hmw();
  } else {
    clear_has_hmw();
  }
  // @@protoc_insertion_point(field_set_allocated:WarningProto.WarningResult.hmw)
}

// optional .WarningProto.WarningResult.UFCW ufcw = 3;
inline bool WarningResult::has_ufcw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarningResult::set_has_ufcw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarningResult::clear_has_ufcw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarningResult::clear_ufcw() {
  if (ufcw_ != NULL) ufcw_->::WarningProto::WarningResult_UFCW::Clear();
  clear_has_ufcw();
}
inline const ::WarningProto::WarningResult_UFCW& WarningResult::ufcw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.ufcw)
  return ufcw_ != NULL ? *ufcw_ : *default_instance_->ufcw_;
}
inline ::WarningProto::WarningResult_UFCW* WarningResult::mutable_ufcw() {
  set_has_ufcw();
  if (ufcw_ == NULL) ufcw_ = new ::WarningProto::WarningResult_UFCW;
  // @@protoc_insertion_point(field_mutable:WarningProto.WarningResult.ufcw)
  return ufcw_;
}
inline ::WarningProto::WarningResult_UFCW* WarningResult::release_ufcw() {
  clear_has_ufcw();
  ::WarningProto::WarningResult_UFCW* temp = ufcw_;
  ufcw_ = NULL;
  return temp;
}
inline void WarningResult::set_allocated_ufcw(::WarningProto::WarningResult_UFCW* ufcw) {
  delete ufcw_;
  ufcw_ = ufcw;
  if (ufcw) {
    set_has_ufcw();
  } else {
    clear_has_ufcw();
  }
  // @@protoc_insertion_point(field_set_allocated:WarningProto.WarningResult.ufcw)
}

// optional .WarningProto.WarningResult.PCW pcw = 4;
inline bool WarningResult::has_pcw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarningResult::set_has_pcw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarningResult::clear_has_pcw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarningResult::clear_pcw() {
  if (pcw_ != NULL) pcw_->::WarningProto::WarningResult_PCW::Clear();
  clear_has_pcw();
}
inline const ::WarningProto::WarningResult_PCW& WarningResult::pcw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.pcw)
  return pcw_ != NULL ? *pcw_ : *default_instance_->pcw_;
}
inline ::WarningProto::WarningResult_PCW* WarningResult::mutable_pcw() {
  set_has_pcw();
  if (pcw_ == NULL) pcw_ = new ::WarningProto::WarningResult_PCW;
  // @@protoc_insertion_point(field_mutable:WarningProto.WarningResult.pcw)
  return pcw_;
}
inline ::WarningProto::WarningResult_PCW* WarningResult::release_pcw() {
  clear_has_pcw();
  ::WarningProto::WarningResult_PCW* temp = pcw_;
  pcw_ = NULL;
  return temp;
}
inline void WarningResult::set_allocated_pcw(::WarningProto::WarningResult_PCW* pcw) {
  delete pcw_;
  pcw_ = pcw;
  if (pcw) {
    set_has_pcw();
  } else {
    clear_has_pcw();
  }
  // @@protoc_insertion_point(field_set_allocated:WarningProto.WarningResult.pcw)
}

// optional .WarningProto.WarningResult.LDW ldw = 5;
inline bool WarningResult::has_ldw() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarningResult::set_has_ldw() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarningResult::clear_has_ldw() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarningResult::clear_ldw() {
  if (ldw_ != NULL) ldw_->::WarningProto::WarningResult_LDW::Clear();
  clear_has_ldw();
}
inline const ::WarningProto::WarningResult_LDW& WarningResult::ldw() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.ldw)
  return ldw_ != NULL ? *ldw_ : *default_instance_->ldw_;
}
inline ::WarningProto::WarningResult_LDW* WarningResult::mutable_ldw() {
  set_has_ldw();
  if (ldw_ == NULL) ldw_ = new ::WarningProto::WarningResult_LDW;
  // @@protoc_insertion_point(field_mutable:WarningProto.WarningResult.ldw)
  return ldw_;
}
inline ::WarningProto::WarningResult_LDW* WarningResult::release_ldw() {
  clear_has_ldw();
  ::WarningProto::WarningResult_LDW* temp = ldw_;
  ldw_ = NULL;
  return temp;
}
inline void WarningResult::set_allocated_ldw(::WarningProto::WarningResult_LDW* ldw) {
  delete ldw_;
  ldw_ = ldw;
  if (ldw) {
    set_has_ldw();
  } else {
    clear_has_ldw();
  }
  // @@protoc_insertion_point(field_set_allocated:WarningProto.WarningResult.ldw)
}

// optional int32 warn_type = 6;
inline bool WarningResult::has_warn_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarningResult::set_has_warn_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarningResult::clear_has_warn_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarningResult::clear_warn_type() {
  warn_type_ = 0;
  clear_has_warn_type();
}
inline ::google::protobuf::int32 WarningResult::warn_type() const {
  // @@protoc_insertion_point(field_get:WarningProto.WarningResult.warn_type)
  return warn_type_;
}
inline void WarningResult::set_warn_type(::google::protobuf::int32 value) {
  set_has_warn_type();
  warn_type_ = value;
  // @@protoc_insertion_point(field_set:WarningProto.WarningResult.warn_type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace WarningProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::WarningProto::FCW_FCWType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WarningProto::FCW_FCWType>() {
  return ::WarningProto::FCW_FCWType_descriptor();
}
template <> struct is_proto_enum< ::WarningProto::LDW_LDWType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WarningProto::LDW_LDWType>() {
  return ::WarningProto::LDW_LDWType_descriptor();
}
template <> struct is_proto_enum< ::WarningProto::WarningResult_WarningLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WarningProto::WarningResult_WarningLevel>() {
  return ::WarningProto::WarningResult_WarningLevel_descriptor();
}
template <> struct is_proto_enum< ::WarningProto::WarningResult_LDWType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WarningProto::WarningResult_LDWType>() {
  return ::WarningProto::WarningResult_LDWType_descriptor();
}
template <> struct is_proto_enum< ::WarningProto::WarningResult_WarningType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WarningProto::WarningResult_WarningType>() {
  return ::WarningProto::WarningResult_WarningType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_warning_2eproto__INCLUDED
